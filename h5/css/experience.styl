/**********************************************************
 *  项目维护的时候 不要轻易添加全局的样式
 *  项目维护的时候 不要轻易添加全局的样式
 *
 **********************************************************/

/*
 *  文字看起来更加清晰, 不在w3c标准中
 */
body{
    -webkit-font-smoothing: antialiased;
    moz-osx-font-smoothing: inherit | grayscale;
    -webkit-overflow-scrolling : touch; // 解决IOS默认滑动很卡的情况
}
/* 移动端点击a链接出现蓝色背景问题解决 */
a:link,a:active,a:visited,a:hover {
    background: none;
    -webkit-tap-highlight-color: rgba(0,0,0,0);
    -webkit-tap-highlight-color: transparent;
}
/* 取消链接高亮  */
body, div, ul, li, ol, h1, h2, h3, h4, h5, h6, input, textarea, select, p, dl, dt, dd, a, img, button, form, table, th, tr, td, tbody, article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

/*
 *  用3D变形来开启GPU加速
 */
main{
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
}

// 动画过程有闪烁（通常发生在动画开始的时候），可以尝试下面的Hack：
{
    webkit-backface-visibility: hidden;
    -moz-backface-visibility: hidden;
    -ms-backface-visibility: hidden;
    backface-visibility: hidden;

    -webkit-perspective: 1000;
    -moz-perspective: 1000;
    -ms-perspective: 1000;
    perspective: 1000;
}
/* video 屏蔽下载按钮
 * <video loop controls id="largeVideo" autoplay controlslist="nodownload">
 */
video::-internal-media-controls-download-button {
    display:none;
}
video::-webkit-media-controls-enclosure {
    overflow:hidden;
}
video::-webkit-media-controls-panel {
    width: calc(100% + 30px);
}


/*
 * 最多显示两行，省略号
 */
.ellipsis2
    text-overflow: -o-ellipsis-lastline;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    line-clamp: 2;
    -webkit-box-orient: vertical

/*
 * chrome下自定义滚动条
 */
section
    height 100%
    padding 24px 24px 24px 204px
    overflow auto
    &::-webkit-scrollbar /*滚动条整体样式*/
        width: 6px;     /*高宽分别对应横竖滚动条的尺寸*/
        // height: 5px;
    &::-webkit-scrollbar-thumb  /*滚动条整体样式*/
        border-radius: 10px;
        -webkit-box-shadow: inset 0 0 5px rgba(0,0,0,0.2);
        background: #bababa;
    &::-webkit-scrollbar-thumb:hover  /*滚动条整体样式*/
        background: #999;

/*
 * 自定义placeholder颜色
 */
input::-webkit-input-placeholder{
    color:#aaa !important
}
input::-moz-placeholder{   /* Mozilla Firefox 19+ */
    color:#aaa !important
}
input:-moz-placeholder{    /* Mozilla Firefox 4 to 18 */
    color:#aaa !important
}
input:-ms-input-placeholder{  /* Internet Explorer 10-11 */
    color:#aaa !important
}

/*
 * 鼠标点击穿透到后面的元素
 */
    pointer-events: none;
/*
 * BFC 块级格式化上下文

  BFC规则：
  1.如果给一个元素创建了一个BFC，就相当于创建了一个新的容器，容器内和容器外中的元素不会相互影响。外边的BFC规则，
    不会对容器里的BFC产生影响，而容器里面的BFC也不会对容器外的BFC产生影响，也就是相互隔绝，互不影响。
  2.盒子的布局开始是从包含容器的顶部开始的。
  3.同一个BFC中，在两个相邻的块级元素中，垂直margin会发生折叠
  4.每个盒子的左边界都要紧靠包含容器的左边界（这也就解释了为什么块级元素都是单独成一行的，如果不单独成行，第二个
  盒子的左边界怎么紧靠包含容器的左边界）；


  IFC规则：
  1.盒子是水平一个接一个的排列，水平的margin，内边距，边框是可以有的。
  2.垂直方向的对齐，可能是底部对齐，顶部对齐，也可能是基线对齐（这个是默认的）；ps.这里的盒子应该是指的内联
    元素的盒子（span，strong等）和匿名内联盒子(只有文本，没有内联元素包含，自动创建的)，他们合称内联盒子，
    一个或者多个内联盒子组成一个行框，行框的宽度由包含块和出现的浮动决定的（为什么有浮动呢，后面解释）；行框的
    高度决定看我的这篇文章（css之line-height）；一定要分清楚，行框和内联盒子的关系，要不然我所说的你就不太可能
    理解。
  3.行框中的内联盒子的高度小于行框的高度时，内联盒子的垂直方向的对齐方式取决于vertical-align属性
  4.当一个行框水平不能容纳内联盒子时，他们将会在垂直方向上产生多个行框，他们上下一个挨着一个，但是不会重叠
  5.一般来说，行框的左边界紧挨着包含容器的左边界，行框的右边界紧挨着包含容器的右边界，（是两个边都紧挨着）。
    然而，浮动盒子可能存在于包含边框边界和行框边界之间（后面解释这种情况）；
  6.多个内联盒子的宽度小于包含他们的行框时，他们在水平方向的分布取决于text-align属性（默认是left）

  能产生新的BFC的属性：
  1.float的值不为none。
  2. overflow的值不为visible。
  3.display的值为table-cell, table-caption, inline-block, flex中的任何一个。
  4.position的值不为relative和static。

*/